<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="29" passed="24" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-05-26T11:59:51 IST" name="Suite" finished-at="2022-05-26T12:00:10 IST" duration-ms="19210">
    <groups>
    </groups>
    <test started-at="2022-05-26T11:59:51 IST" name="Test" finished-at="2022-05-26T12:00:10 IST" duration-ms="19210">
      <class name="com.employeeapi.TestCase.TC004_Put_UpdateSingle_EmployeeData">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.employeeapi.TestCase.TC004_Put_UpdateSingle_EmployeeData@564fabc8]" started-at="2022-05-26T12:00:03 IST" name="setUp" finished-at="2022-05-26T12:00:03 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="updateSingleEmployeeData()[pri:0, instance:com.employeeapi.TestCase.TC004_Put_UpdateSingle_EmployeeData@564fabc8]" started-at="2022-05-26T12:00:03 IST" name="updateSingleEmployeeData" finished-at="2022-05-26T12:00:06 IST" duration-ms="3120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateSingleEmployeeData -->
        <test-method signature="checkContentEncoding()[pri:0, instance:com.employeeapi.TestCase.TC004_Put_UpdateSingle_EmployeeData@564fabc8]" started-at="2022-05-26T12:00:06 IST" name="checkContentEncoding" finished-at="2022-05-26T12:00:06 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method signature="checkContentType()[pri:0, instance:com.employeeapi.TestCase.TC004_Put_UpdateSingle_EmployeeData@564fabc8]" started-at="2022-05-26T12:00:06 IST" name="checkContentType" finished-at="2022-05-26T12:00:06 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.TestCase.TC004_Put_UpdateSingle_EmployeeData@564fabc8]" started-at="2022-05-26T12:00:06 IST" name="checkResponseBody" finished-at="2022-05-26T12:00:06 IST" duration-ms="4" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:976)
at org.testng.Assert.assertEquals(Assert.java:1010)
at com.employeeapi.TestCase.TC004_Put_UpdateSingle_EmployeeData.checkResponseBody(TC004_Put_UpdateSingle_EmployeeData.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkServer()[pri:0, instance:com.employeeapi.TestCase.TC004_Put_UpdateSingle_EmployeeData@564fabc8]" started-at="2022-05-26T12:00:06 IST" name="checkServer" finished-at="2022-05-26T12:00:06 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServer -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.TestCase.TC004_Put_UpdateSingle_EmployeeData@564fabc8]" started-at="2022-05-26T12:00:06 IST" name="checkStatusCode" finished-at="2022-05-26T12:00:06 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1240)
at org.testng.Assert.assertEquals(Assert.java:1274)
at com.employeeapi.TestCase.TC004_Put_UpdateSingle_EmployeeData.checkStatusCode(TC004_Put_UpdateSingle_EmployeeData.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:com.employeeapi.TestCase.TC004_Put_UpdateSingle_EmployeeData@564fabc8]" started-at="2022-05-26T12:00:06 IST" name="checkStatusLine" finished-at="2022-05-26T12:00:06 IST" duration-ms="5" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [HTTP/1.1 200 OK] but found [HTTP/1.1 404 Not Found]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [HTTP/1.1 200 OK] but found [HTTP/1.1 404 Not Found]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.employeeapi.TestCase.TC004_Put_UpdateSingle_EmployeeData.checkStatusLine(TC004_Put_UpdateSingle_EmployeeData.java:74)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCase.TC004_Put_UpdateSingle_EmployeeData@564fabc8]" started-at="2022-05-26T12:00:06 IST" name="tearDown" finished-at="2022-05-26T12:00:06 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.TestCase.TC004_Put_UpdateSingle_EmployeeData -->
      <class name="com.employeeapi.TestCase.TC002_Get_Single_EmployeeData">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.employeeapi.TestCase.TC002_Get_Single_EmployeeData@399f45b1]" started-at="2022-05-26T11:59:57 IST" name="setUp" finished-at="2022-05-26T11:59:57 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getSingleEmployeeData()[pri:0, instance:com.employeeapi.TestCase.TC002_Get_Single_EmployeeData@399f45b1]" started-at="2022-05-26T11:59:57 IST" name="getSingleEmployeeData" finished-at="2022-05-26T12:00:00 IST" duration-ms="3083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSingleEmployeeData -->
        <test-method signature="checkContentEncoding()[pri:0, instance:com.employeeapi.TestCase.TC002_Get_Single_EmployeeData@399f45b1]" started-at="2022-05-26T12:00:00 IST" name="checkContentEncoding" finished-at="2022-05-26T12:00:00 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method signature="checkContentType()[pri:0, instance:com.employeeapi.TestCase.TC002_Get_Single_EmployeeData@399f45b1]" started-at="2022-05-26T12:00:00 IST" name="checkContentType" finished-at="2022-05-26T12:00:00 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.TestCase.TC002_Get_Single_EmployeeData@399f45b1]" started-at="2022-05-26T12:00:00 IST" name="checkResponseBody" finished-at="2022-05-26T12:00:00 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkServer()[pri:0, instance:com.employeeapi.TestCase.TC002_Get_Single_EmployeeData@399f45b1]" started-at="2022-05-26T12:00:00 IST" name="checkServer" finished-at="2022-05-26T12:00:00 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServer -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.TestCase.TC002_Get_Single_EmployeeData@399f45b1]" started-at="2022-05-26T12:00:00 IST" name="checkStatusCode" finished-at="2022-05-26T12:00:00 IST" duration-ms="20" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1240)
at org.testng.Assert.assertEquals(Assert.java:1274)
at com.employeeapi.TestCase.TC002_Get_Single_EmployeeData.checkStatusCode(TC002_Get_Single_EmployeeData.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:com.employeeapi.TestCase.TC002_Get_Single_EmployeeData@399f45b1]" started-at="2022-05-26T12:00:00 IST" name="checkStatusLine" finished-at="2022-05-26T12:00:00 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [HTTP/1.1 200 OK] but found [HTTP/1.1 404 Not Found]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [HTTP/1.1 200 OK] but found [HTTP/1.1 404 Not Found]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.employeeapi.TestCase.TC002_Get_Single_EmployeeData.checkStatusLine(TC002_Get_Single_EmployeeData.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCase.TC002_Get_Single_EmployeeData@399f45b1]" started-at="2022-05-26T12:00:00 IST" name="tearDown" finished-at="2022-05-26T12:00:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.TestCase.TC002_Get_Single_EmployeeData -->
      <class name="com.employeeapi.TestCase.TC005_DeleteSingle_EmployeeData">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.employeeapi.TestCase.TC005_DeleteSingle_EmployeeData@49ec71f8]" started-at="2022-05-26T12:00:06 IST" name="setUp" finished-at="2022-05-26T12:00:06 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getDeleteSingleEmployeeData()[pri:0, instance:com.employeeapi.TestCase.TC005_DeleteSingle_EmployeeData@49ec71f8]" started-at="2022-05-26T12:00:06 IST" name="getDeleteSingleEmployeeData" finished-at="2022-05-26T12:00:10 IST" duration-ms="3938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDeleteSingleEmployeeData -->
        <test-method signature="checkContentEncoding()[pri:0, instance:com.employeeapi.TestCase.TC005_DeleteSingle_EmployeeData@49ec71f8]" started-at="2022-05-26T12:00:10 IST" name="checkContentEncoding" finished-at="2022-05-26T12:00:10 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.TestCase.TC005_DeleteSingle_EmployeeData@49ec71f8]" started-at="2022-05-26T12:00:10 IST" name="checkResponseBody" finished-at="2022-05-26T12:00:10 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkServer()[pri:0, instance:com.employeeapi.TestCase.TC005_DeleteSingle_EmployeeData@49ec71f8]" started-at="2022-05-26T12:00:10 IST" name="checkServer" finished-at="2022-05-26T12:00:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServer -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.TestCase.TC005_DeleteSingle_EmployeeData@49ec71f8]" started-at="2022-05-26T12:00:10 IST" name="checkStatusCode" finished-at="2022-05-26T12:00:10 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:com.employeeapi.TestCase.TC005_DeleteSingle_EmployeeData@49ec71f8]" started-at="2022-05-26T12:00:10 IST" name="checkStatusLine" finished-at="2022-05-26T12:00:10 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCase.TC005_DeleteSingle_EmployeeData@49ec71f8]" started-at="2022-05-26T12:00:10 IST" name="tearDown" finished-at="2022-05-26T12:00:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.TestCase.TC005_DeleteSingle_EmployeeData -->
      <class name="com.employeeapi.TestCase.TC003_Post_CreateSingle_EmployeeData">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.employeeapi.TestCase.TC003_Post_CreateSingle_EmployeeData@36bc55de]" started-at="2022-05-26T12:00:00 IST" name="setUp" finished-at="2022-05-26T12:00:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="createSingleEmployeeData()[pri:0, instance:com.employeeapi.TestCase.TC003_Post_CreateSingle_EmployeeData@36bc55de]" started-at="2022-05-26T12:00:00 IST" name="createSingleEmployeeData" finished-at="2022-05-26T12:00:03 IST" duration-ms="3163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSingleEmployeeData -->
        <test-method signature="checkContentEncoding()[pri:0, instance:com.employeeapi.TestCase.TC003_Post_CreateSingle_EmployeeData@36bc55de]" started-at="2022-05-26T12:00:03 IST" name="checkContentEncoding" finished-at="2022-05-26T12:00:03 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method signature="checkContentType()[pri:0, instance:com.employeeapi.TestCase.TC003_Post_CreateSingle_EmployeeData@36bc55de]" started-at="2022-05-26T12:00:03 IST" name="checkContentType" finished-at="2022-05-26T12:00:03 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.TestCase.TC003_Post_CreateSingle_EmployeeData@36bc55de]" started-at="2022-05-26T12:00:03 IST" name="checkResponseBody" finished-at="2022-05-26T12:00:03 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkServer()[pri:0, instance:com.employeeapi.TestCase.TC003_Post_CreateSingle_EmployeeData@36bc55de]" started-at="2022-05-26T12:00:03 IST" name="checkServer" finished-at="2022-05-26T12:00:03 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServer -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.TestCase.TC003_Post_CreateSingle_EmployeeData@36bc55de]" started-at="2022-05-26T12:00:03 IST" name="checkStatusCode" finished-at="2022-05-26T12:00:03 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:com.employeeapi.TestCase.TC003_Post_CreateSingle_EmployeeData@36bc55de]" started-at="2022-05-26T12:00:03 IST" name="checkStatusLine" finished-at="2022-05-26T12:00:03 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCase.TC003_Post_CreateSingle_EmployeeData@36bc55de]" started-at="2022-05-26T12:00:03 IST" name="tearDown" finished-at="2022-05-26T12:00:03 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.TestCase.TC003_Post_CreateSingle_EmployeeData -->
      <class name="com.employeeapi.TestCase.TC001_Get_All_EmployeeData">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.employeeapi.TestCase.TC001_Get_All_EmployeeData@245b4bdc]" started-at="2022-05-26T11:59:51 IST" name="setUp" finished-at="2022-05-26T11:59:51 IST" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getAllEmployeeData()[pri:0, instance:com.employeeapi.TestCase.TC001_Get_All_EmployeeData@245b4bdc]" started-at="2022-05-26T11:59:51 IST" name="getAllEmployeeData" finished-at="2022-05-26T11:59:56 IST" duration-ms="5033" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployeeData -->
        <test-method signature="checkContentEncoding()[pri:0, instance:com.employeeapi.TestCase.TC001_Get_All_EmployeeData@245b4bdc]" started-at="2022-05-26T11:59:56 IST" name="checkContentEncoding" finished-at="2022-05-26T11:59:56 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method signature="checkContentType()[pri:0, instance:com.employeeapi.TestCase.TC001_Get_All_EmployeeData@245b4bdc]" started-at="2022-05-26T11:59:56 IST" name="checkContentType" finished-at="2022-05-26T11:59:56 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.TestCase.TC001_Get_All_EmployeeData@245b4bdc]" started-at="2022-05-26T11:59:56 IST" name="checkResponseBody" finished-at="2022-05-26T11:59:57 IST" duration-ms="44" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkServer()[pri:0, instance:com.employeeapi.TestCase.TC001_Get_All_EmployeeData@245b4bdc]" started-at="2022-05-26T11:59:57 IST" name="checkServer" finished-at="2022-05-26T11:59:57 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServer -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.TestCase.TC001_Get_All_EmployeeData@245b4bdc]" started-at="2022-05-26T11:59:57 IST" name="checkStatusCode" finished-at="2022-05-26T11:59:57 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:com.employeeapi.TestCase.TC001_Get_All_EmployeeData@245b4bdc]" started-at="2022-05-26T11:59:57 IST" name="checkStatusLine" finished-at="2022-05-26T11:59:57 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCase.TC001_Get_All_EmployeeData@245b4bdc]" started-at="2022-05-26T11:59:57 IST" name="tearDown" finished-at="2022-05-26T11:59:57 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.TestCase.TC001_Get_All_EmployeeData -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
